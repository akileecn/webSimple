<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop.xsd">
	<!-- 包扫描 -->
	<context:component-scan base-package="cn.aki.controller"/>
	<!-- aop -->
	<aop:aspectj-autoproxy/>
	<!-- 静态资源 -->	
	<mvc:resources mapping="/resources/**" location="/resources/" />
	<mvc:resources mapping="/wechat/**" location="/WEB-INF/html/wechat/" />
	<!-- 注解驱动(有resources标签时必须配,另外不配会导致springValidation失效) -->
	<!-- 并相当于注册了RequestMappingHandlerMapping,RequestMappingHandlerAdapter,ExceptionHandlerExceptionResolver -->
	<mvc:annotation-driven validator="validator" conversion-service="conversionService">
		<mvc:message-converters>
	        <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
	            <property name="objectMapper">
	            	<bean class="cn.aki.other.MyObjectMapper"/>
	            </property>
	        </bean>
	    </mvc:message-converters>
	</mvc:annotation-driven>
	
	<!-- 参数类型转换 -->
	<bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<property name="converters">
			<set>
				<bean class="cn.aki.converter.String2DateConverter"/>
				<bean class="cn.aki.converter.String2StringConverter"/>
				<bean class="cn.aki.converter.String2BooleanConverter"/>
			</set>
		</property>
	</bean>
	
	<!-- 简单controller -->
	<mvc:view-controller path="/home" view-name="home"/>
	
	<!-- 拦截器 -->
	<mvc:interceptors>
	    <mvc:interceptor>
	        <mvc:mapping path="/resume/**"/>
	        <mvc:exclude-mapping path="/resume/*/base"/>
	        <bean class="cn.aki.interceptor.ResumeSubIntercaptor"/>
	    </mvc:interceptor>
	</mvc:interceptors>
	
	
	<!--
		freemarker配置
		freemarkerSettings属性为java.util.Properties,freemarkerVariables属性为java.util.Map,其他属性直接配
	-->
	<bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPath" value="/WEB-INF/template/"/>
		<property name="freemarkerSettings">
			<props>
				<prop key="incompatible_improvements">2.3.24</prop>
				<prop key="template_exception_handler">rethrow</prop>
				<prop key="default_encoding">UTF-8</prop>
				<prop key="boolean_format">是,否</prop>
				<prop key="time_format">HH:mm:ss</prop>
				<prop key="date_format">yyyy-MM-dd</prop>
				<prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
				<!-- 属性为空时不报错 -->
				<prop key="classic_compatible">true</prop>
				<!-- spring宏 bootstrap自定义宏 -->
				<prop key="auto_import">"/spring.ftl" as spring,"/base/common.ftl" as c,"/base/bootstrap.ftl" as bootstrap</prop>
			</props>
		</property>
	</bean>
	
	<!-- freemarker视图解析 -->
	<bean id="viewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
	    <property name="cache" value="true"/>
	    <property name="prefix" value=""/>
	    <property name="suffix" value=".ftl"/>
	    <!-- 不添加的话生成页面会乱码 -->
	    <property name="contentType" value="text/html;charset=UTF-8"/>
	    <property name="order" value="1"></property>
	</bean>
	
	<!-- jsp视图解析 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/"/>
		<property name="suffix" value=""/>
		<property name="order" value="2"/>
	</bean>
		  
	<!-- 上传 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding">
			<value>UTF-8</value>
		</property>
		<property name="maxUploadSize">
			<value>10485760</value><!-- 10M -->
		</property>
		<property name="maxInMemorySize">
			<value>4096</value>
		</property>
	</bean>
	
	<!-- 国际化 -->
	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">  
        <property name="defaultEncoding" value="UTF-8" />  
        <!-- you can config a single basename -->  
        <!--<property name="basename" value="" />-->  
        <!-- multi basename -->  
        <property name="basenames">  
            <list>  
                <value>/i18n/validationMessages</value>  
            </list>  
        </property>  
    </bean>  
      
    <!-- JSR 303 Validator -->  
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">  
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator" />  
        <property name="validationMessageSource" ref="messageSource"/>
    </bean> 
</beans>