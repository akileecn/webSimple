<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context.xsd">
	<!-- 过滤器 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
	    <property name="securityManager" ref="securityManager"/>
	    <!-- override these for application-specific URLs if you like: -->
	    <property name="loginUrl" value="/index"/>
	    <property name="successUrl" value="/index"/>
	    <property name="unauthorizedUrl" value="/index"/>
	    <!-- The 'filters' property is not necessary since any declared javax.servlet.Filter bean  -->
	    <!-- defined will be automatically acquired and available via its beanName in chain        -->
	    <!-- definitions, but you can perform instance overrides or name aliases here if you like: -->
	    <property name="filters">
	        <map>
	            <entry key="authc" value-ref="ajaxFormAuthenticationFilter"/>
	        </map>
	    </property>
	    <property name="filterChainDefinitions">
	        <value>
	            # some example chain definitions:
	            #/home.do = authc
	            #/admin/** = authc, roles[admin]
	            #/docs/** = authc, perms[document:read]
	            #/** = authc
	            # more URL-to-FilterChain definitions here
	            /user/login=anon
	            /user/register=anon
	            /user/sendMessage/**=anon
	            /user/captchaImage.png=anon
	            /user/forgetPassword/**=anon
	            /user/**=authc
	            /resume/**=authc
	            /notice/**=authc
	            /application/**=authc
	        </value>
	    </property>
	</bean>
	
	<!-- 自定义过滤器 -->
	<!-- ajax请求被拦截是返回json -->
	<bean id="ajaxFormAuthenticationFilter" class="cn.aki.other.AjaxFormAuthenticationFilter"/>
	
	<!-- Define the Shiro Realm implementation you want to use to connect to your back-end -->
	<!-- security datasource: -->
	<bean id="myRealm" class="cn.aki.other.MyShiroRealm"/>
	
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
	    <!-- Single realm app.  If you have multiple realms, use the 'realms' property instead. -->
	    <property name="realm" ref="myRealm"/>
	    <!-- By default the servlet container sessions will be used.  Uncomment this line
	         to use shiro's native sessions (see the JavaDoc for more): -->
	    <!-- <property name="sessionMode" value="native"/> -->
	</bean>
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
	
	<!-- 为了能够使用shiro的注解 -->
	<!-- Enable Shiro Annotations for Spring-configured beans.  Only run after -->
	<!-- the lifecycleBeanProcessor has run: -->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor"/>
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
	    <property name="securityManager" ref="securityManager"/>
	</bean>
</beans>